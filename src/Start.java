import DataTypes.ByteConventions;
import Text.Fonting;

public class Start extends Thread {
	
	/*
	 * {	
					"00000000",
					"00000000",
					"00000000",
					"00000000",
					"00000000",
					"00000000",
					"00000000",
					"00000000"}
	 * 
	 * */

	public static void main(String args[]) {

		String[][] chars = new String[][] {
				{ 	"00111100",
					"01000010", 
					"10000001", 
					"10000001", 
					"10000001",
					"10000001", 
					"01000010", 
					"00111100" }

				,
				{ 	"00011000", 
					"00111000", 
					"01001000", 
					"00001000", 
					"00001000",
					"00001000", 
					"00001000", 
					"00111100" },
					
				{ 	"00111000", 
					"01000100", 
					"10000010", 
					"00000001", 
					"00000010",
					"00001100", 
					"00110000", 
					"11111111" },
					
					
				{ 	"11111111", 
					"00000010", 
					"00000001", 
					"00011110", 
					"00000001",
					"10000010", 
					"01000100", 
					"00111000" },
					
				{	"00001000",
					"00011000",
					"00101000",
					"01001000",
					"10001000",
					"11111111",
					"00001000",
					"00001000" },
					
				{	"11111111",
					"10000000",
					"10000000",
					"10111100",
					"11000010",
					"00000001",
					"01000010",
					"00111100" },
					
				{	"11111111",
					"00000001",
					"00000010",
					"00000010",
					"00000100",
					"00000100",
					"00001000",
					"00001000" },
					
				{	"00111100",
					"01000010",
					"10000001",
					"01000010",
					"00111100",
					"01000010",
					"10000001",
					"01111110" },
					
				{	"00111100",
					"01000010",
					"10000001",
					"01000011",
					"00111101",
					"10000001",
					"01000010",
					"00111100" },
									
				{	"00011000",
					"00111100",
					"01100110",
					"11000011",
					"11111111",
					"11000011",
					"11000011",
					"11000011" },
					
				{	"00000000",
					"00000000",
					"01111100",
					"10000010",
					"00111101",
					"01000011",
					"10000011",
					"01111101" },
					
				{	"11111100",
					"11000110",
					"11000011",
					"11111110",
					"11000110",
					"11000011",
					"11000110",
					"11111100" },
					
				{	"10000000",
					"10000000",
					"10000000",
					"10111100",
					"11000010",
					"10000001",
					"11000010",
					"10111100" },
					
				{	"00111110",
					"01100011",
					"11000000",
					"11000000",
					"11000000",
					"11000000",
					"01100011",
					"00111110" },
					
				{	
					"00000000",
					"00000000",
					"00111110",
					"01000001",
					"10000000",
					"10000000",
					"01000001",
					"00111110"},
				
				{	
					"11110000",
					"11001100",
					"11000011",
					"11000011",
					"11000011",
					"11000011",
					"11001100",
					"11110000"},
				{	
					"00000001",
					"00000001",
					"00000001",
					"00111101",
					"01000011",
					"10000001",
					"01000011",
					"00111101"},
					
				{	
					"11111111",
					"11000011",
					"11000000",
					"11000011",
					"11111111",
					"11000000",
					"11000011",
					"11111111"},
				{	
					"00000000",
					"00000000",
					"00000000",
					"00111100",
					"01000010",
					"10111100",
					"10000001",
					"01111110"},
					
					{	
						"11111111",
						"11000000",
						"11000000",
						"11000000",
						"11111000",
						"11000000",
						"11000000",
						"11000000"},
					{	
						"00111000",
						"01000100",
						"10000010",
						"10000000",
						"11110000",
						"10000000",
						"10000000",
						"10000000"},
					{	
						"00111111",
						"01100011",
						"11000000",
						"11001111",
						"11000011",
						"11000011",
						"01100110",
						"00111100"},
						
					{	"01111110",
						"10000001",
						"10000001",
						"11000010",
						"10111100",
						"10000000",
						"10000001",
						"01000010",
						"00111100"},
						
					{	
						"11111111",
						"00011000",
						"00011000",
						"00011000",
						"00011000",
						"00011000",
						"00011000",
						"11111111"},
					{	
						"00010000",
						"00101000",
						"00010000",
						"00000000",
						"00010000",
						"00010000",
						"00010000",
						"00010000"},
						
					{	"11111111",
						"00000011",
						"00000011",
						"00000011",
						"00000011",
						"11000011",
						"01100110",
						"00111100"},
						
					{	
						"00000011",
						"00000011",
						"00000000",
						"00111111",
						"00000001",
						"00100001",
						"00010010",
						"00001100",
						}
				
					
				
					};

		Fonting.Syms tt = Fonting.createNewFont(8, 8, chars);
		tt.save("Basic");
		
	}

	@Override
	public void run() {
		while (true) {
			try {
				sleep(1000);
			} catch (InterruptedException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
	}

}
